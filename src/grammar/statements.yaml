grammar:

- type: Block
  params:
  - { name: stmts, type: std::vector<cpplox::StmtPtr> }

- type: Expression
  params:
  - { name: expr, type: cpplox::ExprPtr }

- type: If
  params:
  - { name: condition, type: cpplox::ExprPtr }
  - { name: then_branch }
  - { name: else_branch, type: std::optional<cpplox::StmtPtr> }

- type: Print
  params:
  - { name: expr, type: cpplox::ExprPtr }

- type: Var
  params:
  - { name: name, type: cpplox::Token }
  - { name: init, type: std::optional<cpplox::ExprPtr> }

- type: While
  params:
  - { name: condition, type: cpplox::ExprPtr }
  - { name: body }
